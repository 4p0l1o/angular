{"version":3,"sources":["./src/app/workout/workout.component.ts","./src/app/workout/workout.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/helpers/workouts.service.ts","./src/environments/environment.ts","./src/app/helpers/auth.guard.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/my-workouts/my-workouts.component.ts","./src/app/my-workouts/my-workouts.component.html","./src/app/log/log.component.ts","./src/app/log/log.component.html","./src/app/app.module.ts","./src/app/shared/models/exercise.ts","./src/app/helpers/authentacation.service.ts","./src/app/helpers/log.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { AuthenticationService } from '../helpers/authentacation.service';\r\nimport { WorkoutService } from '../helpers/workouts.service';\r\nimport { Exercise } from '../shared/models/exercise';\r\nimport { Workout } from '../shared/models/workout';\r\n\r\n@Component({\r\n  selector: 'app-workout',\r\n  templateUrl: './workout.component.html',\r\n  styleUrls: ['./workout.component.scss'],\r\n})\r\nexport class WorkoutComponent implements OnInit {\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private authservice: AuthenticationService,\r\n    private workoutservice: WorkoutService\r\n  ) {\r\n    this.route.params.subscribe((params) => {\r\n      this.workoutid = params.id;\r\n      this.workoutservice.getWorkout(params.id).subscribe(workout => {\r\n        this.Exercises = workout.exercise;\r\n      });\r\n    });\r\n  }\r\n\r\n  workoutid;\r\n\r\n  loggedIn = this.authservice.isAuthenticated();\r\n\r\n  displayedColumns: string[] = [\r\n    'exerciseName',\r\n    'repetitions',\r\n    'sets',\r\n    'weight',\r\n    'description',\r\n  ];\r\n\r\n  displayedColumnsFooter: string[] = this.loggedIn\r\n    ? this.displayedColumns\r\n    : null;\r\n\r\n  Exercises;\r\n\r\n  exerciseName = '';\r\n  repetitions = 0;\r\n  sets = 0;\r\n  weight = 0;\r\n  description = '';\r\n\r\n  ngOnInit(): void {}\r\n\r\n  addExercise() {\r\n    if (\r\n      this.exerciseName != '' &&\r\n      this.repetitions != 0 &&\r\n      this.sets != 0 &&\r\n      this.weight != 0 &&\r\n      this.description != ''\r\n    ) {\r\n      var exercise = new Exercise(\r\n        this.exerciseName,\r\n        this.repetitions,\r\n        this.sets,\r\n        this.weight,\r\n        this.description\r\n      );\r\n      \r\n      this.workoutservice.addExercise(exercise, this.workoutid).subscribe(res => {\r\n        console.log(res);\r\n        this.Exercises = res.exercise;\r\n      }, (err) => {\r\n        console.log(err);\r\n        return false;\r\n      });;\r\n\r\n      this.exerciseName = '';\r\n      this.repetitions = 0;\r\n      this.sets = 0;\r\n      this.weight = 0;\r\n      this.description = '';\r\n    }\r\n  }\r\n}\r\n","<table mat-table [dataSource]=\"Exercises\" class=\"mat-elevation-z8\">\r\n  <ng-container matColumnDef=\"exerciseName\">\r\n    <th mat-header-cell *matHeaderCellDef>Exercise name</th>\r\n    <td mat-cell *matCellDef=\"let element\">{{ element.exerciseName }}</td>\r\n    <td mat-footer-cell *matFooterCellDef>\r\n      <mat-form-field class=\"example-form-field\">\r\n        <mat-label>Exercise name</mat-label>\r\n        <input matInput type=\"text\" [(ngModel)]=\"exerciseName\" />\r\n        <button\r\n          mat-button\r\n          *ngIf=\"exerciseName\"\r\n          matSuffix\r\n          mat-icon-button\r\n          aria-label=\"Clear\"\r\n          (click)=\"exerciseName = ''\"\r\n        >\r\n          <mat-icon>close</mat-icon>\r\n        </button>\r\n      </mat-form-field>\r\n    </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"repetitions\">\r\n    <th mat-header-cell *matHeaderCellDef>Repetitions</th>\r\n    <td mat-cell *matCellDef=\"let element\">{{ element.repetitions }}</td>\r\n    <td mat-footer-cell *matFooterCellDef>\r\n      <mat-form-field class=\"example-form-field\">\r\n        <mat-label>Repetitions</mat-label>\r\n        <input matInput type=\"number\" [(ngModel)]=\"repetitions\" />\r\n        <button\r\n          mat-button\r\n          *ngIf=\"repetitions\"\r\n          matSuffix\r\n          mat-icon-button\r\n          aria-label=\"Clear\"\r\n          (click)=\"repetitions = ''\"\r\n        >\r\n          <mat-icon>close</mat-icon>\r\n        </button>\r\n      </mat-form-field>\r\n    </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"sets\">\r\n    <th mat-header-cell *matHeaderCellDef>Sets</th>\r\n    <td mat-cell *matCellDef=\"let element\">{{ element.sets }}</td>\r\n    <td mat-footer-cell *matFooterCellDef>\r\n      <mat-form-field class=\"example-form-field\">\r\n        <mat-label>Sets</mat-label>\r\n        <input matInput type=\"number\" [(ngModel)]=\"sets\" />\r\n        <button\r\n          mat-button\r\n          *ngIf=\"sets\"\r\n          matSuffix\r\n          mat-icon-button\r\n          aria-label=\"Clear\"\r\n          (click)=\"sets = ''\"\r\n        >\r\n          <mat-icon>close</mat-icon>\r\n        </button>\r\n      </mat-form-field>\r\n    </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"weight\">\r\n    <th mat-header-cell *matHeaderCellDef>Weight</th>\r\n    <td mat-cell *matCellDef=\"let element\">{{ element.weight }}</td>\r\n    <td mat-footer-cell *matFooterCellDef>\r\n      <mat-form-field class=\"example-form-field\">\r\n        <mat-label>Weight</mat-label>\r\n        <input matInput type=\"number\" [(ngModel)]=\"weight\" />\r\n        <button\r\n          mat-button\r\n          *ngIf=\"weight\"\r\n          matSuffix\r\n          mat-icon-button\r\n          aria-label=\"Clear\"\r\n          (click)=\"weight = ''\"\r\n        >\r\n          <mat-icon>close</mat-icon>\r\n        </button>\r\n      </mat-form-field>\r\n    </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"description\">\r\n    <th mat-header-cell *matHeaderCellDef>Description</th>\r\n    <td mat-cell *matCellDef=\"let element\">{{ element.description }}</td>\r\n    <td mat-footer-cell *matFooterCellDef>\r\n      <mat-form-field class=\"example-form-field\">\r\n        <mat-label>Description</mat-label>\r\n        <input matInput type=\"text\" [(ngModel)]=\"description\" />\r\n        <button\r\n          mat-button\r\n          *ngIf=\"description\"\r\n          matSuffix\r\n          mat-icon-button\r\n          aria-label=\"Clear\"\r\n          (click)=\"description = ''\"\r\n        >\r\n          <mat-icon>close</mat-icon>\r\n        </button>\r\n      </mat-form-field>\r\n    </td>\r\n  </ng-container>\r\n\r\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n  <tr mat-footer-row *matFooterRowDef=\"displayedColumnsFooter\"></tr>\r\n</table>\r\n\r\n<button *ngIf=\"loggedIn\" mat-fab (click)=\"addExercise()\">\r\n  <mat-icon>add</mat-icon>\r\n</button>","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, ParamMap} from '@angular/router'\r\nimport { WorkoutService } from '../helpers/workouts.service';\r\nimport { Workout } from '../shared/models/workout';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n\r\n  displayedColumns: string[] = ['name'];\r\n  dataSource;\r\n  \r\n\r\n  constructor(private route: ActivatedRoute, private workoutService: WorkoutService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.queryParams.subscribe(params => {\r\n     \r\n    })\r\n    this.workoutService.getAllWorkouts().subscribe((v:any)=>{\r\n      this.dataSource = v.workout;\r\n    });\r\n  }\r\n  getRecord(workout: Workout):void{\r\n    this.router.navigateByUrl(\"workout/\"+ workout._id);\r\n  }\r\n}","<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n  <ng-container matColumnDef=\"name\">\r\n    <th mat-header-cell *matHeaderCellDef>Name</th>\r\n    <td mat-cell *matCellDef=\"let element\">{{ element.programName }}</td>\r\n  </ng-container>\r\n\r\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n  <tr\r\n    mat-row\r\n    *matRowDef=\"let row; columns: displayedColumns\"\r\n    (click)=\"getRecord(row)\"\r\n  ></tr>\r\n</table>\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { BehaviorSubject, of } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { Exercise } from '../shared/models/exercise';\r\nimport { Workout } from '../shared/models/workout';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class WorkoutService {\r\n    readonly workoutUrl = 'https://backend-itewbz.herokuapp.com/workouts'\r\n\r\n    constructor(private http: HttpClient, private router: Router, public jwtHelper: JwtHelperService) {}\r\n\r\n    public getAllWorkouts(){\r\n        return this.http.get<Workout[]>(this.workoutUrl);\r\n    }\r\n    \r\n    public getWorkout(_id: String) {\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': 'Bearer ' + localStorage.getItem(\"token\")\r\n            })};\r\n        return this.http.get<Workout>(this.workoutUrl + '/' + _id, httpOptions);\r\n    }\r\n\r\n    public addWorkout(programName: string){\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': 'Bearer ' + localStorage.getItem(\"token\")\r\n            })};\r\n            \r\n            return this.http.post<boolean>(this.workoutUrl + '/addWorkout', {programName}, httpOptions)\r\n            .pipe(map((res: boolean) => {\r\n                catchError(err => of(err))\r\n                console.log(res);\r\n                \r\n                return res;\r\n            }));\r\n    }\r\n\r\n\r\n    public addExercise(exercise: Exercise, id: String) {\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': 'Bearer ' + localStorage.getItem(\"token\")\r\n            })};\r\n        var params = {\r\n            workoutId: id,\r\n            exerciseName: exercise.exerciseName,\r\n            repetitions: exercise.repetitions,\r\n            sets: exercise.sets,\r\n            weight: exercise.weight,\r\n            description: exercise.description,\r\n        };\r\n        return this.http.put<Workout>(this.workoutUrl + '/addExerciseToWorkout', params, httpOptions);\r\n    }\r\n\r\n    public getWorkoutsByUserId(){\r\n        console.log(localStorage.getItem('token'));\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': 'Bearer ' + localStorage.getItem(\"token\")\r\n            })};\r\n        return this.http.get<Workout[]>(this.workoutUrl + '/byUserId', httpOptions);\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import {Injectable } from '@angular/core';\r\nimport { Router, CanActivate, RouterStateSnapshot } from '@angular/router';\r\nimport { AuthenticationService } from './authentacation.service';\r\nimport { Observable, of, Subject } from 'rxjs';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private authenticationService: AuthenticationService\r\n    ) {}\r\n\r\n\r\n\r\n    canActivate(): boolean {\r\n        if(!this.authenticationService.isAuthenticated()) {\r\n            this.router.navigate(['home']);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    \r\n}","import { Component, ElementRef, AfterViewInit, OnInit } from '@angular/core';\r\nimport { DbUser } from './shared/models/user';\r\nimport { AuthenticationService } from './helpers/authentacation.service';\r\nimport { FormGroup, FormBuilder, FormControl } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'FitnessWebzz';\r\n  isLoggedIn = false;\r\n  showLogin = false;\r\n  showRegister = false;\r\n\r\n  loginForm: FormGroup;\r\n  registerForm: FormGroup;\r\n\r\n  constructor(\r\n    private authService: AuthenticationService,\r\n    private formBuilder: FormBuilder,\r\n    private router: Router\r\n  ) {}\r\n  ngOnInit(): void {\r\n    this.loginForm = new FormGroup({\r\n      email: new FormControl(''),\r\n      password: new FormControl(''),\r\n    });\r\n    this.registerForm = new FormGroup({\r\n      email: new FormControl(''),\r\n      name: new FormControl(''),\r\n      password: new FormControl(''),\r\n    });\r\n\r\n    this.isLoggedIn = this.authService.isAuthenticated();\r\n  }\r\n\r\n  logOut() {\r\n    this.authService.logout()\r\n    this.isLoggedIn = false;\r\n    this.showLogin = false;\r\n    this.showRegister = false;\r\n    this.router.navigateByUrl('home');\r\n  }\r\n\r\n  toggleLogin(): void {\r\n    if (this.showRegister) {\r\n      this.toggleRegister();\r\n    }\r\n    this.showLogin = !this.showLogin;\r\n  }\r\n  toggleRegister(): void {\r\n    if (this.showLogin) {\r\n      this.toggleLogin();\r\n    }\r\n    this.showRegister = !this.showRegister;\r\n  }\r\n\r\n  onLoginSubmit() {\r\n    const userData = this.loginForm.value;\r\n    \r\n    const req = this.authService.login(userData.email, userData.password);\r\n    req.subscribe(\r\n      (res) => {\r\n        this.isLoggedIn = true;\r\n        this.showLogin = false;\r\n        this.showRegister = false;\r\n      },\r\n      (err) => {\r\n        if (err.status === 401) {\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  onRegisterSubmit() {\r\n    const userData = this.registerForm.value;\r\n    console.log(userData);\r\n    const req = this.authService.register(userData);\r\n    req.subscribe(\r\n      (res) => {\r\n        this.isLoggedIn = true;\r\n        this.showLogin = false;\r\n        this.showRegister = false;\r\n      },\r\n      (err) => {\r\n        if (err.status === 401) {\r\n          this.isLoggedIn = false;\r\n        }\r\n      }\r\n    );\r\n  }\r\n}\r\n","<!-- Toolbar -->\r\n<mat-toolbar color=\"primary\">\r\n  <button\r\n    mat-button\r\n    aria-label=\"Example icon-button with menu icon\"\r\n    (click)=\"drawer.toggle()\"\r\n  >\r\n    <mat-icon>menu</mat-icon>\r\n  </button>\r\n  <span style=\"margin-left: 10px\">{{ title }}</span>\r\n  <span class=\"example-spacer\"></span>\r\n  <span style=\"float: right; margin-left: auto; margin-right: 25px\">\r\n    <button mat-button (click)=\"toggleLogin()\" *ngIf=\"!this.isLoggedIn\">Login</button>\r\n    <button mat-button (click)=\"toggleRegister()\" *ngIf=\"!this.isLoggedIn\">Sign up</button>\r\n    <button mat-button (click)=\"this.logOut()\" *ngIf=\"this.isLoggedIn\">Log Out</button>\r\n  </span>\r\n\r\n  <div class=\"form-popup\" id=\"login\" *ngIf=\"this.showLogin\">\r\n    <div class=\"arrow-up-login\"></div>\r\n    <form\r\n      class=\"form-container\"\r\n      [formGroup]=\"loginForm\"\r\n      (ngSubmit)=\"onLoginSubmit()\"\r\n    >\r\n      <h1>Login</h1>\r\n\r\n      <div>\r\n        <label for=\"email\" style=\"display: block\"><b>Email</b></label>\r\n        <input\r\n          matInput\r\n          type=\"text\"\r\n          placeholder=\"Enter Email\"\r\n          formControlName=\"email\"\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        <label for=\"psw\" style=\"display: block\"><b>Password</b></label>\r\n        <input\r\n          matInput\r\n          type=\"password\"\r\n          placeholder=\"Enter Password\"\r\n          formControlName=\"password\"\r\n          required\r\n        />\r\n      </div>\r\n      <button type=\"submit\" class=\"btn\">Login</button>\r\n      <button type=\"button\" class=\"btn cancel\" (click)=\"this.toggleLogin()\">\r\n        Close\r\n      </button>\r\n    </form>\r\n    <div class=\"md-spinner\" *ngIf=\"this.showSpinner\">\r\n      <mat-progress-spinner\r\n        [mode]=\"'indeterminate'\"\r\n        [diameter]=\"40\"\r\n        class=\"spinner\"\r\n      >\r\n      </mat-progress-spinner>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-popup\" id=\"register\" *ngIf=\"showRegister\">\r\n    <div class=\"arrow-up-register\"></div>\r\n    <form\r\n      class=\"form-container\"\r\n      [formGroup]=\"registerForm\"\r\n      (ngSubmit)=\"onRegisterSubmit()\"\r\n    >\r\n      <h1>Sign up</h1>\r\n\r\n      <label for=\"email\" style=\"display: block\"><b>Email</b></label>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter Email\"\r\n        formControlName=\"email\"\r\n        required\r\n      />\r\n\r\n      <label for=\"name\" style=\"display: block\"><b>Name</b></label>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter Name\"\r\n        formControlName=\"name\"\r\n        required\r\n      />\r\n\r\n      <label for=\"psw\" style=\"display: block\"><b>Password</b></label>\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Enter Password\"\r\n        formControlName=\"password\"\r\n        required\r\n      />\r\n\r\n      <button type=\"submit\" class=\"btn\" value=\"<%= username %>\">Sign up</button>\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn cancel\"\r\n        (click)=\"this.toggleRegister()\"\r\n        value=\"<%= password %>\"\r\n      >\r\n        Close\r\n      </button>\r\n    </form>\r\n  </div>\r\n\r\n</mat-toolbar>\r\n<mat-drawer-container class=\"drawer-container\" autosize>\r\n  <mat-drawer #drawer class=\"example-sidenav\" mode=\"side\">\r\n    <mat-list role=\"list\">\r\n      <mat-list-item role=\"listitem\">\r\n        <button mat-button [routerLink]=\"['home']\">All Workouts</button>\r\n      </mat-list-item>\r\n      <mat-list-item role=\"listitem\">\r\n        <button mat-button [routerLink]=\"['my-workouts']\">My Workouts</button>\r\n      </mat-list-item>\r\n      <mat-list-item role=\"listitem\">\r\n        <button mat-button [routerLink]=\"['log']\">\r\n          Training Logs\r\n        </button>\r\n      </mat-list-item>\r\n    </mat-list>\r\n  </mat-drawer>\r\n\r\n  <div class=\"example-sidenav-content\">\r\n    <div class=\"content\" role=\"main\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </div>\r\n</mat-drawer-container>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { WorkoutService } from '../helpers/workouts.service';\r\nimport { Workout } from '../shared/models/workout';\r\n\r\n@Component({\r\n  selector: 'app-my-workouts',\r\n  templateUrl: './my-workouts.component.html',\r\n  styleUrls: ['./my-workouts.component.scss']\r\n})\r\nexport class MyWorkoutsComponent implements OnInit {\r\n\r\n  constructor(private route: ActivatedRoute, private workoutService: WorkoutService, private router: Router) { }\r\n  displayedColumns: string[] = ['name'];\r\n  dataSource; \r\n  programName = '';\r\n\r\n  \r\n\r\n  ngOnInit(): void {\r\n    this.route.queryParams.subscribe(params => {\r\n     \r\n    });\r\n\r\n    this.workoutService.getWorkoutsByUserId().subscribe((v:any)=>{\r\n      this.dataSource = v.workout;\r\n    });\r\n  }\r\n\r\n  refresh() {\r\n    this.workoutService.getWorkoutsByUserId().subscribe((v:any)=>{\r\n      this.dataSource = v.workout;\r\n    });\r\n  }\r\n\r\n  getRecord(workout: Workout):void{\r\n    this.router.navigateByUrl(\"workout/\"+ workout._id);\r\n  }\r\n\r\n  addWorkout(){   \r\n    this.workoutService.addWorkout(this.programName).subscribe(() => {\r\n      this.refresh();\r\n    });\r\n  }\r\n}\r\n","<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n  <ng-container matColumnDef=\"name\">\r\n    <th mat-header-cell *matHeaderCellDef>Name</th>\r\n    <td mat-cell *matCellDef=\"let element\">{{ element.programName }}</td>\r\n    <td mat-footer-cell *matFooterCellDef>\r\n      <mat-form-field class=\"example-form-field\">\r\n        <mat-label>Name</mat-label>\r\n        <input matInput type=\"text\" [(ngModel)]=\"programName\" />\r\n        <button\r\n          mat-button\r\n          *ngIf=\"programName\"\r\n          matSuffix\r\n          mat-icon-button\r\n          aria-label=\"Clear\"\r\n          (click)=\"programName = ''\"\r\n        >\r\n          <mat-icon>close</mat-icon>\r\n        </button>\r\n      </mat-form-field>\r\n    </td>\r\n  </ng-container>\r\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n  <tr\r\n    mat-row\r\n    *matRowDef=\"let row; columns: displayedColumns\"\r\n    (click)=\"getRecord(row)\"\r\n  ></tr>\r\n  <tr mat-footer-row *matFooterRowDef=\"displayedColumns\"></tr>\r\n</table>\r\n\r\n<button mat-fab (click)=\"this.addWorkout()\">\r\n  <mat-icon>add</mat-icon>\r\n</button>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { LogService } from '../helpers/log.service';\r\nimport { Log } from '../shared/models/log';\r\nimport { Workout } from '../shared/models/workout';\r\n\r\n@Component({\r\n  selector: 'app-log',\r\n  templateUrl: './log.component.html',\r\n  styleUrls: ['./log.component.scss'],\r\n})\r\nexport class LogComponent implements OnInit {\r\n  log = '';\r\n  displayedColumns: string[] = ['Logs'];\r\n  displayedColumnsFooter: string[] = this.displayedColumns;\r\n  dataSource;\r\n\r\n  constructor(private logService: LogService) {\r\n    this.refresh();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    document\r\n      .addEventListener('keyup', function (event) {\r\n        if (event.keyCode === 13) {\r\n          event.preventDefault();\r\n          document.getElementById('addButton').click();\r\n        }\r\n      });\r\n  }\r\n\r\n  refresh() {\r\n    this.logService.getLogs().subscribe((logs: Log[]) => {\r\n      this.dataSource = logs;\r\n    });\r\n  }\r\n\r\n  addLog() {\r\n    if (this.log) {\r\n      this.logService.addLog(this.log).subscribe(() => {\r\n        this.refresh();\r\n        this.log = '';\r\n      });\r\n    }\r\n  }\r\n}\r\n","<p>log works!</p>\r\n<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n  <ng-container matColumnDef=\"Logs\">\r\n    <th mat-header-cell *matHeaderCellDef>Logs</th>\r\n    <td mat-cell *matCellDef=\"let element\">{{ element.logStatement }}</td>\r\n    <td mat-footer-cell *matFooterCellDef>\r\n      <mat-form-field class=\"example-form-field\">\r\n        <mat-label>Log Statement</mat-label>\r\n        <input matInput type=\"text\" [(ngModel)]=\"log\"/>\r\n        <button\r\n          *ngIf=\"log\"\r\n          matSuffix\r\n          mat-icon-button\r\n          aria-label=\"Clear\"\r\n          (click)=\"log = ''\"\r\n        >\r\n          <mat-icon>close</mat-icon>\r\n        </button>\r\n      </mat-form-field>\r\n    </td>\r\n  </ng-container>\r\n\r\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n  <tr mat-footer-row *matFooterRowDef=\"displayedColumnsFooter\"></tr>\r\n</table>\r\n\r\n<div class=\"add-container\">\r\n  <button mat-fab (click)=\"this.addLog()\" id=\"addButton\">\r\n    <mat-icon>add</mat-icon>\r\n  </button>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatToolbarModule} from '@angular/material/toolbar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { AuthenticationService } from './helpers/authentacation.service';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { MyWorkoutsComponent } from './my-workouts/my-workouts.component';\r\nimport { MatTableModule } from '@angular/material/table'\r\nimport {\r\n  JwtHelperService,\r\n  JwtModule,\r\n  JwtModuleOptions,\r\n  JWT_OPTIONS,\r\n} from '@auth0/angular-jwt';\r\nimport { WorkoutComponent } from './workout/workout.component';\r\nimport { LogComponent } from './log/log.component';\r\nimport { LogService } from './helpers/log.service';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [AppComponent, HomeComponent, MyWorkoutsComponent, WorkoutComponent, LogComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatSliderModule,\r\n    MatIconModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatInputModule,\r\n    HttpClientModule,\r\n    MatTableModule,\r\n  ],\r\n  providers: [\r\n    AuthenticationService,\r\n    LogService,\r\n    JwtHelperService,\r\n    { provide: JWT_OPTIONS, useValue: JWT_OPTIONS },\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class Exercise{\r\n    public exerciseName: string;\r\n    public repetitions: Number;\r\n    public sets: Number;\r\n    public weight: Number;\r\n    public description: string;\r\n\r\n    constructor(exerciseName:string, repetitions: Number, sets: Number, weight: Number, description: string){\r\n        this.exerciseName = exerciseName;\r\n        this.repetitions = repetitions;\r\n        this.sets = sets; \r\n        this.weight = weight;\r\n        this.description = description;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, ReplaySubject } from 'rxjs';\r\nimport { map, catchError, tap } from 'rxjs/operators';\r\nimport { User, DbUser } from '../shared/models/user';\r\nimport { Router } from '@angular/router';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthenticationService {\r\n    readonly userUrl = 'https://backend-itewbz.herokuapp.com/auth'\r\n\r\n    constructor(private http: HttpClient, private router: Router, public jwtHelper: JwtHelperService) {}\r\n\r\n\r\n    public isAuthenticated(): boolean {\r\n        const token = localStorage.getItem('token');\r\n        return !this.jwtHelper.isTokenExpired(token);\r\n    }\r\n\r\n    public login(username, password) {\r\n        return this.http.post<User>(this.userUrl + '/login', { username, password })\r\n            .pipe(map(response => {\r\n                localStorage.setItem('token', response.token.replace(/[\"']/g, \"\"));\r\n                return response;\r\n            }));\r\n    }\r\n\r\n    public logout() {\r\n        localStorage.removeItem('token');\r\n    }\r\n\r\n    public register(user: DbUser) {\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': '*'\r\n            })\r\n        };\r\n        return this.http.post<boolean>(this.userUrl + '/register', user, httpOptions)\r\n            .pipe(map((res: boolean) => {\r\n                catchError(err => of(err))\r\n                return res;\r\n            }));\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { of } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { Log } from '../shared/models/log';\r\n\r\n@Injectable()\r\nexport class LogService {\r\n  readonly url = 'https://backend-itewbz.herokuapp.com/log';\r\n\r\n  logs: Log[];\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getLogs() {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Access-Control-Allow-Origin': '*',\r\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\r\n      }),\r\n    };\r\n    return this.http.get<Log[]>(this.url, httpOptions).pipe(\r\n      map((res: Log[]) => {\r\n        catchError((err) => of(err));\r\n        return res;\r\n      })\r\n    );\r\n  \r\n  }\r\n\r\n  addLog(log: string) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Access-Control-Allow-Origin': '*',\r\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\r\n      }),\r\n    };\r\n    return this.http.post<Log>(this.url, {log}, httpOptions).pipe(\r\n      map((res: any) => {\r\n        catchError((err) => of(err));\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { MyWorkoutsComponent } from './my-workouts/my-workouts.component';\r\nimport { WorkoutComponent } from './workout/workout.component';\r\nimport { AuthGuard } from './helpers/auth.guard';\r\nimport { LogComponent } from './log/log.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\r\n  {\r\n    path: 'my-workouts',\r\n    component: MyWorkoutsComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  { path: 'home', component: HomeComponent },\r\n  {\r\n    path: 'workout/:id',\r\n    component: WorkoutComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  { path: 'log', component: LogComponent, canActivate: [AuthGuard] },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}